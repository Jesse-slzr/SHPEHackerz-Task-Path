// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DashboardScreen renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#F4F4F4",
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#A8D5BA",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "padding": 16,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <Text>
        Options
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#fff",
          "borderRadius": 10,
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <Text
        style={
          {
            "color": "#000",
          }
        }
      >
        Enter Kids View
      </Text>
    </View>
  </View>
  <View>
    <Text
      style={
        {
          "fontSize": 24,
          "fontWeight": "bold",
        }
      }
    >
      Dashboard
    </Text>
  </View>
  <View
    style={
      {
        "flexDirection": "row",
        "marginVertical": 16,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "borderBottomColor": "#000",
          "borderBottomWidth": 2,
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <Text>
        Kid 1
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <Text>
        Kid 2
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "marginVertical": 20,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 20,
        }
      }
    >
      This week
    </Text>
    <Text
      style={
        {
          "fontSize": 40,
          "fontWeight": "bold",
        }
      }
    >
      1 Tasks
    </Text>
    <View
      style={
        {
          "backgroundColor": "#E0E0E0",
          "borderRadius": 10,
          "height": 150,
        }
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#81C784",
          "borderRadius": 10,
          "marginTop": 10,
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <Text
        style={
          {
            "color": "#fff",
            "textAlign": "center",
          }
        }
      >
        Generate Report
      </Text>
    </View>
  </View>
  <Text
    style={
      {
        "fontSize": 20,
        "fontWeight": "bold",
        "marginBottom": 10,
      }
    }
  >
    Recent Tasks
  </Text>
  <RCTScrollView
    ListEmptyComponent={
      <Text>
        No recent tasks.
      </Text>
    }
    data={
      [
        {
          "date": "9/29/24",
          "id": "1",
          "kid": "Kid 2",
          "taskName": "Task Name",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "backgroundColor": "#E8F5E9",
              "borderRadius": 10,
              "marginBottom": 10,
              "padding": 16,
            }
          }
        >
          <Text>
            9/29/24
             Completed by 
            Kid 2
          </Text>
          <Text
            style={
              {
                "fontWeight": "bold",
              }
            }
          >
            Task Name
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      {
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginTop": 20,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text>
        Tasks
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text>
        Kids
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <Text>
        Rewards
      </Text>
    </View>
  </View>
</View>
`;
